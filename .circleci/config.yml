orbs:
  anchore: anchore/anchore-engine@1.6.0

version: 2.1

aws-base: &aws-base
  docker:
    - image: amazon/aws-cli
    
jobs:
  lint:
    docker:
      - image: python:3.7.3-stretch
    
    working_directory: ~/repo
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
    
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 && chmod +x /bin/hadolint
      - save_cache:
           paths:
             - ./venv
           key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  local_image_scan:
    executor: anchore/anchore_engine
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: build image
          command: 'docker build -t "test/housepricemlapi:latest" .'
      - anchore/analyze_local_image:
          dockerfile_path: ./Dockerfile
          image_name: 'test/housepricemlapi:latest'
          policy_bundle_file_path: .circleci/.anchore/policy_bundle.json
          policy_failure: true
          timeout: '500'
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports

  upload_image:
    docker:
      - image:  circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
          TAG=0.1.$CIRCLE_BUILD_NUM
          cat $TAG > tag.txt
          ls -lah 
          docker build -t $DOCKER_LOGIN/housepricemlapi:$TAG .
          docker push $DOCKER_LOGIN/housepricemlapi:$TAG  
      - persist_to_workspace:
          root: ~/
          paths:
            - project/tag.txt

  rolling_upgrade:
    <<: *aws-base
    steps:
      - checkout
      - run: yum install -y tar gzip
      - attach_workspace:
          at: ~/
      - run:
          name: install kubectl 
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            ./kubectl version --client
      - run:
          name: install jq
          command: |
            curl -LO "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64"
            mv jq-linux64 jq
            chmod +x jq
      - run: | 
          aws eks --region us-west-2 update-kubeconfig --name test-cluster2
          ./kubectl get all -n mlapi
          url=$(./kubectl get services -n mlapi -o json | ./jq -r .items[].status.loadBalancer.ingress[].hostname)
          echo $url
      - run: 
         name: update deployment
         command: |
           ls -lah ~/
           TAG=`cat ~/tag.txt`
           ./kubectl set image deployment/housingmlapi -n mlapi housepricemlapi=beardyc/housepricemlapi:$TAG --record   
           ./kubectl rollout status deployment/housingmlapi -n mlapi
           ./kubectl get all -n mlapi


workflows:
  default:
    jobs:
      #- lint
      #- local_image_scan
      - upload_image
      #    requires: [lint]
      - rolling_upgrade:
          requires: [upload_image]

